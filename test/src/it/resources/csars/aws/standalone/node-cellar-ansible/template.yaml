tosca_definitions_version: tosca_simple_yaml_1_0_0_wd03
description: Node cellar partial topology for aws with ansible
template_name: Nodecellar-ansible-template-aws-sa
template_version: 1.0.0-SNAPSHOT
template_author: MKV

imports:
  - mongod-ansible-type:*
  - nodejs-ansible-type:*
  - nodecellar-type:*
  - toscaruntime-aws-provider-types:*
  - toscaruntime-script-plugin-types:*

topology_template:
  inputs:
    plugin_configs:
      type: com.toscaruntime.common.datatypes.PluginConfiguration
    image_id:
      type: string
    instance_type:
      type: string
    key_name:
      type: string
    security_groups:
      type: list
      entry_schema:
        type: string
    cloud_init:
      type: string

  node_templates:

    MongoHost:
      type: com.toscaruntime.aws.nodes.Instance
      properties:
        image_id: { get_input: image_id }
        instance_type: { get_input: instance_type }
        key_name: { get_input: key_name }
        security_groups: { get_input: security_groups }
        plugins: { get_input: plugin_configs }
        user_data: { get_input: cloud_init }
      requirements:
        - network: Internet

    MongoDB:
      type: alien.nodes.ansible.Mongod
      requirements:
        - host: MongoHost

    NodeCellarHost:
      type: com.toscaruntime.aws.nodes.Instance
      properties:
        image_id: { get_input: image_id }
        instance_type: { get_input: instance_type }
        key_name: { get_input: key_name }
        security_groups: { get_input: security_groups }
        plugins: { get_input: plugin_configs }
        user_data: { get_input: cloud_init }
      requirements:
        - network: Internet

    Nodejs:
      type: alien.nodes.ansible.Nodejs
      requirements:
        - host: NodeCellarHost

    Nodecellar:
      type: alien.nodes.Nodecellar
      properties:
        context_root: "/"
        port: 8088
      requirements:
        - host:
            node: Nodejs
            capability: tosca.capabilities.Container
            relationship: alien.relationships.NodecellarHostedOnNodejs
        - database:
            node: MongoDB
            capability: tosca.capabilities.Endpoint.Database
            relationship: alien.relationships.NodejsConnectToMongo

    Internet:
      type: com.toscaruntime.aws.nodes.PublicNetwork

  outputs:
    Nodecellar_nodecellar_url:
      value: { get_attribute: [ Nodecellar, nodecellar_url ] }