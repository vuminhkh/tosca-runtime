tosca_definitions_version: tosca_simple_yaml_1_0_0_wd03

template_name: docker-type
template_version: 1.0.0-SNAPSHOT
template_author: MKV

node_types:
  com.toscaruntime.docker.nodes.DockerDaemon:
    derived_from: tosca.nodes.SoftwareComponent
    description: >
      The docker software component to install/ start/ stop docker daemon
    properties:
      port:
        type: integer
        required: true
        default: 2376
    capabilities:
      host: com.toscaruntime.docker.capabilities.DeployContainer
    interfaces:
      Standard:
        create: daemon/scripts/create.sh
        configure:
          inputs:
            DAEMON_PORT: { get_property: [SELF, port] }
            # TODO Workaround as for the moment we do not support override a node type on a node template
            # TODO Another solution is to create a relationship between the proxy and the docker daemon
            PROXY_URL: { concat: ["http://", get_attribute: [HOST, public_ip_address], ":9000"] }
          implementation: daemon/scripts/configure.sh
        start: daemon/scripts/start.sh
        stop: daemon/scripts/stop.sh

  com.toscaruntime.docker.nodes.DockerComponent:
    derived_from: tosca.nodes.SoftwareComponent
    description: >
      Softwares that are packaged as docker image ready to deploy
    properties:
      docker_image:
        type: string
      docker_command:
        type: string
        required: false
      port_mapping:
        type: string
        required: false
    requirements:
      host:
        type: com.toscaruntime.docker.capabilities.DeployContainer
        relationship_type: com.toscaruntime.docker.relationships.DeployedOnDaemon
    interfaces:
      Standard:
        create:
          inputs:
            DOCKER_IMAGE: { get_property: [SELF, docker_image] }
            DOCKER_COMMAND: { get_property: [SELF, docker_command] }
            DOCKER_PORTS: { get_property: [SELF, port_mapping] }
            # TODO Workaround as for the moment we do not support publish of attribute on software component
            DOCKER_HOST: { concat: ["http://", get_attribute: [HOST, ip_address], ":2376" ] }
          implementation: component/scripts/create.sh

capability_types:
  com.toscaruntime.docker.capabilities.DeployContainer:
    derived_from: tosca.capabilities.Container

relationship_types:
  com.toscaruntime.docker.relationships.DeployedOnDaemon:
    derived_from: tosca.relationships.HostedOn
    valid_targets: [ com.toscaruntime.docker.capabilities.RunDockerContainer ]
