tosca_definitions_version: tosca_simple_yaml_1_0_0_wd03

template_name: openstack-bootstrap-template
template_version: ${version}
template_author: MKV

imports:
  - toscaruntime-bootstrap-type:*
  - toscaruntime-openstack-provider-types:*
  - toscaruntime-script-plugin-types:*

topology_template:
  description: Wordpress deployment template for openstack
  inputs:
    plugin_configs:
      type: com.toscaruntime.common.datatypes.PluginConfiguration
    image:
      type: string
    flavor:
      type: string
    key_pair_name:
      type: string
    security_group_names:
      type: list
      entry_schema:
        type: string
    external_network_name:
      type: string
    cloud_init:
      type: string

  outputs:
    public_docker_daemon_host:
      description: The URL to access the docker daemon
      value: { get_attribute: [ dockerDaemon, public_docker_host ] }
    public_proxy_url:
      description: The URL to access the proxy
      value: { get_attribute: [ proxy, public_proxy_url ] }
    network_id:
      description: The id of the network the docker daemon connected to
      value: { get_attribute: [ privateNetwork, provider_resource_id ] }
    network_name:
      description: The name of the openstack network that the host of docker daemon is connected to
      value: { get_attribute: [ privateNetwork, provider_resource_name ] }
    external_network_id:
      description: The id of the external network the docker daemon connected to
      value: { get_attribute: [ publicNetwork, provider_resource_id ] }

  node_templates:
    publicNetwork:
      type: com.toscaruntime.openstack.nodes.ExternalNetwork
      properties:
        network_name: { get_input: external_network_name}
    privateNetwork:
      type: com.toscaruntime.openstack.nodes.Network
      properties:
        network_name: "dockerDaemonNetwork"
        cidr: "192.168.1.0/24"
    dockerMachine:
      type: com.toscaruntime.openstack.nodes.Compute
      properties:
        image: { get_input: image }
        flavor: { get_input: flavor }
        key_pair_name: { get_input: key_pair_name }
        security_group_names: { get_input: security_group_names }
        user_data: { get_input: cloud_init }
        plugins: { get_input: plugin_configs }
      requirements:
        - network: privateNetwork
        - network: publicNetwork
    dockerDaemon:
      type: com.toscaruntime.docker.nodes.DockerDaemon
      properties:
        port: 2376
        pull_images: toscaruntime/deployer:${version}
      requirements:
        - host: dockerMachine
    proxy:
      type: com.toscaruntime.docker.nodes.ProxyWebApp
      properties:
        docker_image_tag: ${version}
      requirements:
        - host: dockerMachine
        - daemon: dockerDaemon